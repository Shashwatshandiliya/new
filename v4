// Update the interfaces
interface Policy {
  policy: {
    policyId: number;
    policyName: string;
  };
}

interface Profile {
  profile: {
    profileId: number;
    profileName: string;
  };
}

// Update the EntitlementRow interface
interface EntitlementRow {
  name: string;
  ID: string;
  description: string;
  application: string;
  isActive: boolean;
  lastModified: string;
  policies: Array<{id: number, name: string}>;
  dataProfiles: Array<{id: number, name: string}>;
}

// Update the fetchEntitlements mapping
const rows = resp.data.map(item => ({
  name: item.entitlementName,
  ID: item.entitlementId.toString(),
  description: item.description,
  application: item.application.appName,
  isActive: item.isActive,
  lastModified: new Date(item.lastUpdated).toLocaleDateString(),
  policies: item.entitlementPolicyList.map(p => ({
    id: p.policy.policyId,
    name: p.policy.policyName
  })),
  dataProfiles: item.entitlementProfileList.map(p => ({
    id: p.profile.profileId,
    name: p.profile.profileName
  }))
}));

// Update the Policies/Profiles display section
{drawerData.policies.length > 0 ? (
  drawerData.policies.map((policy, index) => (
    <Box key={index} sx={{ 
      backgroundColor: '#262B36',
      p: 1.5,
      borderRadius: '4px',
      mb: 1,
      border: '1px solid #2BCBC155',
      boxShadow: '0 0 8px #2BCBC122'
    }}>
      <Grid container alignItems="center">
        <Grid item xs={8}>
          <Typography sx={{ 
            color: '#2BCBC1', 
            fontSize: '0.875rem',
            fontWeight: 500
          }}>
            {policy.name}
          </Typography>
        </Grid>
        <Grid item xs={4} sx={{ textAlign: 'right' }}>
          <Typography sx={{ 
            color: '#888', 
            fontSize: '0.75rem',
          }}>
            POI {String(policy.id).padStart(6, '0')}
          </Typography>
        </Grid>
      </Grid>
    </Box>
  ))
) : (...)}

// Similarly update Data Profiles section
{drawerData.dataProfiles.map((profile, index) => (
  <Box key={index} sx={{...}}>
    <Grid container alignItems="center">
      <Grid item xs={8}>
        <Typography sx={{...}}>
          {profile.name}
        </Typography>
      </Grid>
      <Grid item xs={4} sx={{ textAlign: 'right' }}>
        <Typography sx={{...}}>
          DPR {String(profile.id).padStart(6, '0')}
        </Typography>
      </Grid>
    </Grid>
  </Box>
))}
