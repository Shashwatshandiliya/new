return (
  <div className={styles.container}>
    <Typography fontFamily="Poppins" sx={{ fontWeight: 500, fontSize: 20, color: 'white' }}>
      Entitlement Users
    </Typography>

    {/* Accounts Section */}
    <div className={styles.section}>
      <div className={styles.sectionHeader}>
        <Typography className={styles.sectionTitle}>Accounts</Typography>
        <div className={styles.underline} />
      </div>

      <Grid container alignItems="center" spacing={2} className={styles.filterSection}>
        <Grid item xs={12} md={4} lg={3}>
          <TextField
            placeholder="Search accounts"
            size="small"
            fullWidth
            value={searchTerm}
            onChange={e => setSearchTerm(e.target.value)}
            sx={{
              '& .MuiInputBase-root': { height: 40 },
              backgroundColor: '#1E252D',
              borderRadius: 1
            }}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <SearchIcon sx={{ color: '#CBCBCB' }} />
                </InputAdornment>
              ),
            }}
          />
        </Grid>
        <Grid item xs={3} md={2} lg={1}>
          <Button
            variant="outlined"
            size="small"
            sx={{ color: 'white', borderColor: 'white', height: 40, width: '100%' }}
          >
            Search
          </Button>
        </Grid>
        <Grid item xs={9} md={6} lg={8} textAlign="right">
          <Button
            variant="contained"
            startIcon={<AddCircleIcon />}
            sx={{ height: 40, fontWeight: 600, fontSize: 12 }}
          >
            Create Account
          </Button>
        </Grid>
      </Grid>

      <MaterialTable
        tableRows={filteredAccounts}
        tableCols={headCellsAccounts}
        totalRowCount={filteredAccounts.length}
        globalSearch={false}
        onRowClick={row => openDrawer(row as any)}
      />
    </div>

    {/* Entitlements Section */}
    <div className={styles.section}>
      <div className={styles.sectionHeader}>
        <Typography className={styles.sectionTitle}>Entitlements</Typography>
        <div className={styles.underline} />
      </div>

      <Grid container alignItems="center" spacing={2} className={styles.filterSection}>
        <Grid item xs={12} md={4} lg={3}>
          <TextField
            placeholder="Search entitlements"
            size="small"
            fullWidth
            value={searchTerm}
            onChange={e => setSearchTerm(e.target.value)}
            sx={{
              '& .MuiInputBase-root': { height: 40 },
              backgroundColor: '#1E252D',
              borderRadius: 1
            }}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <SearchIcon sx={{ color: '#CBCBCB' }} />
                </InputAdornment>
              ),
            }}
          />
        </Grid>
        <Grid item xs={3} md={2} lg={1}>
          <Button
            variant="outlined"
            size="small"
            sx={{ color: 'white', borderColor: 'white', height: 40, width: '100%' }}
          >
            Search
          </Button>
        </Grid>
        <Grid item xs={9} md={6} lg={8} textAlign="right">
          <Button
            variant="contained"
            startIcon={<AddCircleIcon />}
            sx={{ height: 40, fontWeight: 600, fontSize: 12 }}
          >
            Create Entitlement
          </Button>
        </Grid>
      </Grid>

      <MaterialTable
        tableRows={filteredEntitlements}
        tableCols={headCellsEntitlements}
        totalRowCount={filteredEntitlements.length}
        globalSearch={false}
        onRowClick={row => openDrawer(row as any)}
      />
    </div>

    {/* Drawer remains unchanged */}
    <Drawer
      anchor="right"
      open={drawerOpen}
      onClose={() => setDrawerOpen(false)}
      sx={{ '& .MuiDrawer-paper': { width: 500, backgroundColor: '#1A2028', p: 2 } }}
    >
      {drawerData ? (
        <>
          <div className={styles.drawerHeader}>
            <Typography variant="h6" sx={{ color: 'white' }}>
              {'name' in drawerData ? drawerData.name : drawerData.bankId}
            </Typography>
            <IconButton onClick={() => setDrawerOpen(false)} sx={{ color: 'white' }}>
              <DeleteIcon />
            </IconButton>
          </div>
          <Grid container spacing={1} sx={{ mt: 1 }}>
            {Object.entries(drawerData).map(([k, v]) => (
              <Grid key={k} item xs={12} sx={{ backgroundColor: '#FFFFFF0D', p: 1 }}>
                <Typography variant="body2" sx={{ color: 'white' }}>
                  {`${k.charAt(0).toUpperCase() + k.slice(1)}: ${Array.isArray(v) ? v.join(', ') : v}`}
                </Typography>
              </Grid>
            ))}
          </Grid>
          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>
            <Button variant="outlined" startIcon={<DeleteIcon />} sx={{ color: 'white', borderColor: 'white' }}>
              Delete
            </Button>
            <Button variant="contained" startIcon={<EditIcon />}>
              Edit
            </Button>
          </Box>
        </>
      ) : (
        <Typography sx={{ color: 'white' }}>No record selected</Typography>
      )}
    </Drawer>
  </div>
);





.container {
  padding: 16px;
  color: white;
}

.section {
  margin-top: 32px;
}

.sectionHeader {
  display: inline-block;
  margin-bottom: 8px;
}

.sectionTitle {
  font-size: 18px;
  font-weight: 600;
}

.underline {
  height: 2px;
  background-color: #ffffff;
  width: 100%;
  margin-top: 2px;
}
