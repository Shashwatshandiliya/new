your-repository/
├── azure-pipelines.yml
└── ado-playbooks/
    ├── hosts.ini
    ├── hostsprod.ini
    ├── site.yml
    ├── deploy_prod.yml
    └── deploy_prd.yml


parameters:
  - name: releaseId
    type: string
    displayName: Release WorkItem ID
    default: "1234567"

trigger:
  - develop
  - release*
  - main*

resources:
  repositories:
    - repository: governed-templates
      name: dj-core/governed-templates
      ref: "main"
      type: git

variables:
  - group: 55508-NonProd
  - name: BRANCH_NAME
    value: $(Build.SourceBranchName)
  - name: VERSION
    value: '1.0.0-SNAPSHOT-$(Build.BuildId)'

extends:
  template: governed-template/build-and-deploy.yml@governed-templates
  parameters:
    releaseId: ${{ parameters.releaseId }}
    ITAM: 55508
    buildStackName: node
    buildStackParams:
      pool: sc-linux
      nodeVersion: '16.10.0'
      npmInstallArguments: '--force'
      npmTaskList:
        - name: 'Run Test'
          task: run test
        - name: 'Run Build'
          task: run build
      packageVersion: $(Build.BuildNumber)
      npmFilePath: /
      targetPathArtifactory: 'npm-release'
      deploymentFolderName: 'ansible'
      archiveType: zip
      uiNpmApp: true
      uiNpmBuildDir: dist
      testResultsFiles: '**/test-*.xml'
      sonarExclusions: "**/node_modules/**, **/coverage/**,**/src/actions/**, **/src/api/**, **/src/assets/**,**/src/config/**, **/src/constants/**,**/src/reducers/**, **/src/server/**, **/src/services/**,**/src/store/**, **/src/styles/**, **/src/testing/**, **/src/util/**, **/src/vendors/**,**/src/components/app**,src/index.js, src/bootstrap.js, src.configuration.js,src.interApplicationBus-1.0.0.js, src.registerServiceWorker.js, src.Root.js,azure-pipelines-generic-old.yml, azure-pipelines-npm.yml, webpack.common.js, webpack.dev.js, webpack.prod.js, webpack.server.config.js,**/src/components/__tests__/**, **/src/components/auditHistory/**, **/src/components/authenticatedRoute/**,**/src/components/BulkUploads/**,**/src/components/common/**,**/src/components/common/auditlog/**,**/src/components/common/auditModal/**,**/src/components/common/commentBox/**,**/src/components/common/Dialog/**,**/src/components/common/downloadFile/**,**/src/components/common/dialogbox/**,**/src/components/common/FieldLabel/**,**/src/components/common/filterByList/**,**/src/components/common/filterBySearch/**,**/src/components/common/searchbox/**,**/src/components/common/spinner/**,**/src/components/common/Switch-theme/**,**/src/components/common/ViewBuilder/**,**/src/components/common/ViewSelector/**,**/src/components/dashboard/**,**/src/components/error/**,**/src/components/fxForms/**,**/src/components/fxForms/detail/**,**/src/components/fxInventory/**,**/src/components/fxInventory/detail/**,**/src/components/fxInventory/tradeCorp/**,**/src/components/fxOrderManagement/**,**/src/components/fxOrderManagement/rateMaintenance/**,**/src/components/header/**,**/src/components/login/**,**/src/components/pouInventory/**,**/src/components/pouInventory/pouDetail/**,**/src/components/ReferenceData/countrySLACutOff/**,**/src/components/ReferenceData/currencyHolidays/**,**/src/components/ReferenceData/errorCode/**,**/src/components/ReferenceData/sca/**,**/src/components/ReferenceData/SsleId/**,**/src/components/reports/**,**/src/components/routes/**,**/src/components/sso-login/**,**/src/components/User/**,**/src/components/userManagement/**,**/src/components/utils/**, **/ansible/**, **/ansible/**, **/ansible/**,**/cd/**, **/cd/**, cd/playbook.yml,**/config/**,**/config/jest/**, config/env.js, config/getHttpsConfig.js, config/modules.js, config/paths.js, config/pnpTs.js, config/webpack.config.js, config/webpackDevServer.config.js,**/scripts/**, **/scripts/test.js/**, **/src/index.less/**, **/src/index.html/**, **/src/components/footer/footer.less/**,**/src/components/TaxInventory/**,**/src/components/TaxInventory/TaxDetail/**"
    deployStackName: ansible
    deployStackParams:
      ansibleVerboseLevel: -vvvv
      playbookDryRun: false
      globalSSHKey: true
    deployEnvironments:
      - name: dev
        environment: dev
        displayName: Dev
        notifyUsers: |
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux
        globalSSHKey: true
        inventoryPath: ado-playbooks/hosts.ini
        playbookPath: ado-playbooks/site.yml
        extraVars: "envname=dev packageVersion=$(Build.BuildNumber) tag_version=$(Build.SourceBranchName)"

      - name: qa
        environment: qa
        displayName: SIT
        hasTestManual: true
        notifyUsers: |
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux
        globalSSHKey: true
        inventoryPath: ado-playbooks/hosts.ini
        playbookPath: ado-playbooks/site.yml
        extraVars: "envname=sit packageVersion=$(Build.BuildNumber) tag_version=$(Build.SourceBranchName)"
        dependsOn:
          - dev

      - name: staging
        environment: staging
        displayName: UAT
        hasTestManual: true
        notifyUsers: |
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux
        globalSSHKey: true
        inventoryPath: ado-playbooks/hosts.ini
        playbookPath: ado-playbooks/site.yml
        extraVars: "envname=uat packageVersion=$(Build.BuildNumber) tag_version=$(Build.SourceBranchName)"
        dependsOn:
          - qa

      - name: release_checks
        environment: pre-release
        displayName: pre-release
        dependsOn:
          - staging
        notifyUsers:
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux

      - name: release
        environment: release
        displayName: Release
        dependsOn:
          - release_checks
        notifyUsers:
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux

      - name: prod
        environment: production
        displayName: Production
        dependsOn:
          - release
        notifyUsers: |
          Shashwatsirjam.shandiliya@sc.com
        pool: sc-linux
        globalSSHKey: true
        inventoryPath: ado-playbooks/hostsprod.ini
        playbookPath: ado-playbooks/deploy_prod.yml
        enableManualPIT: true
        extraVars: "envname=prd packageVersion=$(Build.BuildNumber) tag_version=$(Build.SourceBranchName)"

      - name: rollback_prod
        environment: production
        displayName: Rollback Prod
        dependsOn:
          - prod
        notifyUsers: |
          POU-SS-Support@sc.com
        pool: sc-linux
        rollbackBuildNumber: 20240723.6
        inventoryPath: ado-playbooks/hostsprod.ini
        playbookPath: ado-playbooks/deploy_prd.yml
        globalSSHKey: true
        extraVars: "envname=prd packageVersion=$(rollbackBuildNumber) tag_version=4888450"








[dev]
uklvadces0001a.pi.dev.net

[sit]
uklvadces0001a.pi.dev.net

[uat]
uklvadces0001a.pi.dev.net

[prd]
uklvadces0001a.pi.dev.net
uklvadces0001b.pi.dev.net

[dev:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
service_path=/home/cesuser/Shashwat
service_path_bkp=/home/cesuser/Shashwat_bkp
service_name=FMCES-APP
artifactory_url=https://artifactory.global.standardchartered.com/artifactory/npm-sc-release_local_new/FMCES-APP/-

[sit:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
service_path=/home/cesuser/Shashwat
service_path_bkp=/home/cesuser/Shashwat_bkp
service_name=FMCES-APP
artifactory_url=https://artifactory.global.standardchartered.com/artifactory/npm-sc-release_local_new/FMCES-APP/-

[uat:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
service_path=/home/cesuser/Shashwat
service_path_bkp=/home/cesuser/Shashwat_bkp
service_name=FMCES-APP
artifactory_url=https://artifactory.global.standardchartered.com/artifactory/npm-sc-release_local_new/FMCES-APP/-

[prd:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
service_path=/home/cesuser/Shashwat
service_path_bkp=/home/cesuser/Shashwat_bkp
service_name=FMCES-APP
artifactory_url=https://artifactory.global.standardchartered.com/artifactory/npm-sc-release_local_new/FMCES-APP/-





[prd]
uklvadces0001a.pi.dev.net
uklvadces0001b.pi.dev.net

[prd:vars]
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
service_path=/home/cesuser/Shashwat
service_path_bkp=/home/cesuser/Shashwat_bkp
service_name=FMCES-APP
artifactory_url=https://artifactory.global.standardchartered.com/artifactory/npm-sc-release_local_new/FMCES-APP/-





---
- name: Deploy FMCES UI Tiles Frontend
  hosts: "{{ envname }}"
  remote_user: "cesuser"
  become: yes
  become_user: cesuser
  become_method: sudo

  vars:
    service_path: "{{ service_path }}"
    service_path_bkp: "{{ service_path_bkp }}"
    app_tgz_name: "{{ service_name }}-{{ packageVersion }}-{{ tag_version }}-{{ packageVersion }}.tgz"
    app_repository_url: "{{ artifactory_url }}"

  tasks:
    - name: Delete Backup Folder incase if already exists
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: absent

    - name: Download artifacts to deploy folder {{ envname }} {{ service_name }}
      get_url:
        url: "{{ app_repository_url }}/{{ app_tgz_name }}"
        dest: "{{ service_path_bkp }}"
        force: yes
        validate_certs: False

    - name: Create Backup Folder
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: directory
        mode: 0755

    - name: Take the dist backup
      shell: "mv {{ service_path }}/dist {{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"

    - name: create new dist folder {{ envname }} {{ service_path }}
      shell: "mkdir {{ service_path }}/dist"

    - name: Extract .tgz
      unarchive:
        src: "{{ service_path_bkp }}/{{ app_tgz_name }}"
        dest: "{{ service_path }}/dist/"
        copy: no







---
- name: Deploy FMCES UI Tiles Frontend to Production
  hosts: "{{ envname }}"
  remote_user: "cesuser"
  become: yes
  become_user: cesuser
  become_method: sudo

  vars:
    service_path: "{{ service_path }}"
    service_path_bkp: "{{ service_path_bkp }}"
    app_tgz_name: "{{ service_name }}-{{ packageVersion }}-{{ tag_version }}-{{ packageVersion }}.tgz"
    app_repository_url: "{{ artifactory_url }}"

  tasks:
    - name: Delete Backup Folder incase if already exists
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: absent

    - name: Download artifacts to deploy folder {{ envname }} {{ service_name }}
      get_url:
        url: "{{ app_repository_url }}/{{ app_tgz_name }}"
        dest: "{{ service_path_bkp }}"
        force: yes
        validate_certs: False

    - name: Create Backup Folder
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: directory
        mode: 0755

    - name: Take the dist backup
      shell: "mv {{ service_path }}/dist {{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"

    - name: create new dist folder {{ envname }} {{ service_path }}
      shell: "mkdir {{ service_path }}/dist"

    - name: Extract .tgz
      unarchive:
        src: "{{ service_path_bkp }}/{{ app_tgz_name }}"
        dest: "{{ service_path }}/dist/"
        copy: no




---
- name: Rollback FMCES UI Tiles Frontend in Production
  hosts: "{{ envname }}"
  remote_user: "cesuser"
  become: yes
  become_user: cesuser
  become_method: sudo

  vars:
    service_path: "{{ service_path }}"
    service_path_bkp: "{{ service_path_bkp }}"
    app_tgz_name: "{{ service_name }}-{{ packageVersion }}-{{ tag_version }}-{{ packageVersion }}.tgz"
    app_repository_url: "{{ artifactory_url }}"

  tasks:
    - name: Delete Backup Folder incase if already exists
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: absent

    - name: Download artifacts to deploy folder {{ envname }} {{ service_name }}
      get_url:
        url: "{{ app_repository_url }}/{{ app_tgz_name }}"
        dest: "{{ service_path_bkp }}"
        force: yes
        validate_certs: False

    - name: Create Backup Folder
      file:
        path: "{{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"
        state: directory
        mode: 0755

    - name: Take the dist backup
      shell: "mv {{ service_path }}/dist {{ service_path_bkp }}/dist_{{ ansible_date_time.date }}"

    - name: create new dist folder {{ envname }} {{ service_path }}
      shell: "mkdir {{ service_path }}/dist"

    - name: Extract .tgz
      unarchive:
        src: "{{ service_path_bkp }}/{{ app_tgz_name }}"
        dest: "{{ service_path }}/dist/"
        copy: no








