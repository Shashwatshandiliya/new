site.yml

- name: Deploy systemd service
  copy:
    src: "files/fmces-ui-tiles.service"
    dest: "/etc/systemd/system/fmces-ui-tiles.service"
    owner: root
    group: root
    mode: 0644

ado-playbooks/files/fmces-ui-tiles.service

[Unit]
Description=FMCES UI Tiles Service
After=network.target

[Service]
Type=simple
User=cesuser
WorkingDirectory=/home/cesuser/Shashwat
ExecStart=/usr/bin/npm start
Restart=on-failure

[Install]
WantedBy=multi-user.target


trigger:
- develop
- release/*
- main

parameters:
  - name: releaseId
    type: string
    displayName: Release WorkItem ID
    default: "1234567"

resources:
  repositories:
    - repository: governed-templates
      name: dj-core/governed-templates
      ref: "main"
      type: git

variables:
  - group: 55508-NonProd
  - name: BRANCH_NAME
    value: $(Build.SourceBranchName)
  - name: VERSION
    value: 'FMCES-APP-FRONTEND-$(Build.BuildNumber)'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        npm install
        npm run build
      displayName: 'Install and Build'
      
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'dist'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployToDev
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/drop'
              TargetFolder: '$(Build.SourcesDirectory)/dist'
              CleanTargetFolder: true
              
          - script: |
              apt-get update
              apt-get install -y ansible
            displayName: 'Install Ansible'
            
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'ado-playbooks'
              TargetFolder: '$(Build.SourcesDirectory)/ado-playbooks'
              
          - script: |
              ansible-playbook -i ado-playbooks/hosts.ini ado-playbooks/site.yml
            displayName: 'Run Ansible Playbook'



[defaults]
inventory = hosts.ini
remote_user = cesuser
private_key_file = ~/.ssh/id_rsa
host_key_checking = False

[privilege_escalation]
become = True
become_method = sudo
become_user = root
become_ask_pass = False



---
- name: Deploy Node.js application
  hosts: dev
  become: yes
  vars:
    app_name: "fmces-ui-tiles"
    deploy_path: "/home/cesuser/Shashwat"
    build_artifact: "{{ playbook_dir }}/../dist"  # Path to your built files

  tasks:
    - name: Create deployment directory
      file:
        path: "{{ deploy_path }}"
        state: directory
        mode: 0755
        owner: cesuser
        group: cesuser

    - name: Copy application files
      copy:
        src: "{{ build_artifact }}/"
        dest: "{{ deploy_path }}"
        owner: cesuser
        group: cesuser
        mode: 0644

    - name: Install dependencies
      command: "npm install --production"
      args:
        chdir: "{{ deploy_path }}"

    - name: Restart application
      systemd:
        name: "{{ app_name }}"
        state: restarted
        enabled: yes
      when: ansible_service_mgr == "systemd"






[dev]
uklvadces0001a.pi.dev.net

[dev:vars]
ansible_connection=ssh
ansible_user=cesuser
ansible_ssh_private_key_file=~/.ssh/id_rsa
